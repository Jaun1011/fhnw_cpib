
(*
generated by jku, ica
*)
datatype nonterm
    = schinken
    | rep0
    | opt0

val string_of_nonterm =
    fn schinken => "schinken"
    | rep0 => "rep0"
    | opt0 => "opt0"

datatype term
    = RPARENT
    | TEST
    | BLU
    | AB

val string_of_term =
    fn RPARENT => "RPARENT"
    | TEST => "TEST"
    | BLU => "BLU"
    | AB => "AB"

val string_of_gramsym = (string_of_term, string_of_nonterm)
local
  open FixFoxi.FixFoxiCore
in
val productions = [
    (schinken, [
         [N opt0T TEST, N rep0]
        ,[]]),
    (opt0, [
         [T RPARENT]
        ,[]]),
    (rep0, [
         [T BLU, T AB, N rep0]
        ,[]]),
]

val S = expr
val result = fix_foxi productions S string_of_gramsym
end (* local *)
