
(*
generated by jku, ica
*)
datatype nonterm
    = program
    | rep0
    | opt0

val string_of_nonterm =
    fn program => "program"
    | rep0 => "rep0"
    | opt0 => "opt0"

datatype term
    = PROGRAM
    | IDENT
    | GLOBAL
    | ENDPROGRAM

val string_of_term =
    fn PROGRAM => "PROGRAM"
    | IDENT => "IDENT"
    | GLOBAL => "GLOBAL"
    | ENDPROGRAM => "ENDPROGRAM"

val string_of_gramsym = (string_of_term, string_of_nonterm)
local
  open FixFoxi.FixFoxiCore
in
val productions = [
    (program, [
         [T PROGRAM, T IDENT, N opt0, N rep0]])

     ,    (opt0, [
         [T GLOBAL]
        ,[]])
    ,    (rep0, [
         [T ENDPROGRAM, N rep0]
        ,[]])
]

val S = program
val result = fix_foxi productions S string_of_gramsym
end (* local *)
