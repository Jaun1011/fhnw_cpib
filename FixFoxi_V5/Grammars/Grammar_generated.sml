
(*
generated by jku, ica
*)
datatype nonterm
    = expr
    | letter
    | digit
    | lowercase
    | uppercase

val string_of_nonterm =
    fn expr => "expr"
    | letter => "letter"
    | digit => "digit"
    | lowercase => "lowercase"
    | uppercase => "uppercase"

datatype term
    = NUMBER
    | LOWCHAR
    | HIGHCHAR

val string_of_term =
    fn NUMBER => "NUMBER"
    | LOWCHAR => "LOWCHAR"
    | HIGHCHAR => "HIGHCHAR"

val string_of_gramsym = (string_of_term, string_of_nonterm)
local
  open FixFoxi.FixFoxiCore
in
val productions = [
    (expr, [[N letter]]),
    (digit, [[T NUMBER]]),
    (lowercase, [[T LOWCHAR]]),
    (uppercase, [[T HIGHCHAR]]),
    (letter, [[N lowercase]
        ,[N uppercase]])
]

val S = expr
val result = fix_foxi productions S string_of_gramsym
end (* local *)
